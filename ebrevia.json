{
  "swagger": "2.0",
  "info": {
    "title": "eBrevia API v0",
    "description": "Accelerate your diligence with eBrevia's intelligent analytics API.\n\n# Introduction\n\nThe eBrevia API allows you to access general account information and intelligent analytics programmatically. The current API is very easy to use for writing and testing applications. You can access the URL endpoints in a browser or via any HTTP client.\n\n# Base URL & Versioning\n\nAll API urls are currently on version 0, and have the following common base:\n\nhttps://yourserver.ebrevia.com/api/v0\n\nWhere yourserver should be replaced by the server where you run eBrevia. For example, the UK server might be:\n\n https://uk.ebrevia.com \n\nThe API will evolve with future releases of eBrevia to become more restful and even easier to use, so API calls are versioned to ensure that clients don't break. The API has an open schema model, it ignores any extra query parameters, and may add extra properties to responses in future releases.\n\n# Authentication\n\nAuthentication is handled by basic auth and api key. Users with admin priviledge can generate api key in the admin panel of the web application interface. Regenerate API key replaces an existing API key. You can then include the api key in the Authorization header with the following format:\n\nAuthorization Type  | Username | Password\n----------------|-------------|-------------\nBasic Auth | client API key | left empty\n\n# Status Codes\n\nThe API uses conventional HTTP status codes to indicate the success or failure of an API call. In general, codes in the 2xx range indicate success, codes in the 4xx range indicate a client error, and codes in 5xx indicates a server error. The current applied status codes are:\n\nHTTP Response Status Code  | Message\n----------------|-------------\n200 | Success\n400 | Bad request\n401 | Not authorized\n403 | Forbidden\n",
    "version": "0",
    "termsOfService": "",
    "contact": {
      "email": "support@ebrevia.com"
    },
    "license": {
      "name": "eBrevia License",
      "url": "http://"
    },
    "x-logo": {
      "url": "/images/eBrevia-smartstart.png"
    }
  },
  "host": "secure.ebrevia.com",
  "schemes": [
    "https"
  ],
  "basePath": "/api/v0",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "x-tagGroups": [
    {
      "name": "Endpoints",
      "tags": [
        "user",
        "organization",
        "project",
        "remote project",
        "folder",
        "document",
        "export",
        "security",
        "notification"      
      ]
    }
  ],
  "securityDefinitions": {
    "ApiKey": {
      "name": "AUTHORIZATION",
      "type": "apiKey",
      "in": "header"
    }
  },
  "security": [
    {
      "ApiKey": []
    }
  ],
  "paths": {
    "/users/me": {
      "get": {
        "summary": "Get the authenticated user",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "A user object",
            "examples": {
              "application/json": {
                "matters": [
                  {
                    "id": 1,
                    "title": "Project Alpha",
                    "homedir": {
                      "path": ".../project_alpha"
                    },
                    "urlKey": "project_alpha",
                    "company": {
                      "id": 1,
                      "name": "eBrevia",
                      "urlKey": "ebrevia",
                      "nlSplit": false,
                      "isTwoFactor": false
                    },
                    "customFields": [],
                    "product": "DILIGENCE",
                    "downloadAllowed": true,
                    "ocrAllImages": false,
                    "userRoles": {
                      "admin": "ROLE_STANDARD_USER"
                    },
                    "isRemote": false
                  },
                  {
                    "id": 2,
                    "title": "Project Beta",
                    "homedir": {
                      "path": ".../project_beta"
                    },
                    "urlKey": "project_beta",
                    "company": {
                      "id": 1,
                      "name": "eBrevia",
                      "urlKey": "ebrevia",
                      "nlSplit": false,
                      "isTwoFactor": false
                    },
                    "customFields": [],
                    "product": "DILIGENCE",
                    "downloadAllowed": true,
                    "ocrAllImages": false,
                    "userRoles": {
                      "admin": "ROLE_STANDARD_USER"
                    },
                    "isRemote": false
                  }
                ],
                "username": "admin",
                "name": "Sample Admin",
                "extractorPrefs": {
                  "username": "admin",
                  "lastDir": "ALL",
                  "lastMatter": {
                    "id": 1,
                    "title": "Ned Gannon's Matter",
                    "homedir": {
                      "path": ".../sample"
                    },
                    "urlKey": "sample",
                    "company": {
                      "id": 1,
                      "name": "eBrevia",
                      "urlKey": "ebrevia",
                      "nlSplit": false,
                      "isTwoFactor": false
                    },
                    "customFields": [],
                    "product": "DILIGENCE",
                    "downloadAllowed": true,
                    "ocrAllImages": false,
                    "userRoles": {
                      "admin": "ROLE_STANDARD_USER"
                    },
                    "isRemote": false
                  },
                  "uploadedDocsCount": 12,
                  "analyzedDocsCount": 0,
                  "productStage": "TRAINED_NEW_WORKFLOW"
                },
                "isAnnotator": false,
                "isAdmin": true,
                "isHelpdesk": false,
                "isOrgAdmin": false,
                "isOrgMember": false,
                "isOnprem": false,
                "isDemo": false,
                "fields": [
                  {
                    "id": "amending_agreement",
                    "title": "Amending Agreement",
                    "cats": [
                      "GENERAL"
                    ],
                    "type": "annotation",
                    "subFields": []
                  }
                ],
                "leaseFields": [
                  {
                    "id": "l_address_only",
                    "title": "Property Address",
                    "cats": [
                      "LEASE"
                    ],
                    "type": "annotation",
                    "subFields": []
                  }
                ],
                "firstTierFields": [
                  {
                    "id": "amending_agreement",
                    "title": "Amending Agreement",
                    "cats": [
                      "GENERAL"
                    ],
                    "type": "annotation",
                    "subFields": []
                  }
                ],
                "companyId": 1,
                "companyPrefix": "ebrevia",
                "company": {
                  "id": 1,
                  "name": "eBrevia",
                  "urlKey": "ebrevia",
                  "nlSplit": false,
                  "isTwoFactor": false
                },
                "roles": [
                  "ROLE_ANNOTATOR",
                  "ROLE_USER"
                ],
                "enabled": true
              }
            }
          }
        }
      }
    },
    "/users/{username}": {
      "parameters": [
        {
          "name": "username",
          "in": "path",
          "description": "username",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "summary": "Get a user by username",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "A user object",
            "examples": {
              "application/json": {
                "matters": [
                  {
                    "id": 1,
                    "title": "Project Alpha",
                    "homedir": {
                      "path": ".../project_alpha"
                    },
                    "urlKey": "project_alpha",
                    "company": {
                      "id": 1,
                      "name": "eBrevia",
                      "urlKey": "ebrevia",
                      "nlSplit": false,
                      "isTwoFactor": false
                    },
                    "customFields": [],
                    "product": "DILIGENCE",
                    "downloadAllowed": true,
                    "ocrAllImages": false,
                    "userRoles": {
                      "admin": "ROLE_STANDARD_USER"
                    },
                    "isRemote": false
                  },
                  {
                    "id": 2,
                    "title": "Project Beta",
                    "homedir": {
                      "path": ".../project_beta"
                    },
                    "urlKey": "project_beta",
                    "company": {
                      "id": 1,
                      "name": "eBrevia",
                      "urlKey": "ebrevia",
                      "nlSplit": false,
                      "isTwoFactor": false
                    },
                    "customFields": [],
                    "product": "DILIGENCE",
                    "downloadAllowed": true,
                    "ocrAllImages": false,
                    "userRoles": {
                      "admin": "ROLE_STANDARD_USER"
                    },
                    "isRemote": false
                  }
                ],
                "username": "sampleuser@sample.com",
                "name": "Sample User",
                "extractorPrefs": {
                  "username": "sampleuser@sample.com",
                  "lastDir": "",
                  "lastMatter": {
                    "id": 1,
                    "title": "Ned Gannon's Matter",
                    "homedir": {
                      "path": ".../sample"
                    },
                    "urlKey": "sample",
                    "company": {
                      "id": 1,
                      "name": "eBrevia",
                      "urlKey": "ebrevia",
                      "nlSplit": false,
                      "isTwoFactor": false
                    },
                    "customFields": [],
                    "product": "DILIGENCE",
                    "downloadAllowed": true,
                    "ocrAllImages": false,
                    "userRoles": {
                      "admin": "ROLE_STANDARD_USER"
                    },
                    "isRemote": false
                  },
                  "uploadedDocsCount": 12,
                  "analyzedDocsCount": 0,
                  "productStage": "TRAINED_NEW_WORKFLOW"
                },
                "isAnnotator": true,
                "isAdmin": false,
                "isHelpdesk": false,
                "isOrgAdmin": false,
                "isOrgMember": false,
                "isOnprem": false,
                "isDemo": false,
                "fields": [
                  {
                    "id": "amending_agreement",
                    "title": "Amending Agreement",
                    "cats": [
                      "GENERAL"
                    ],
                    "type": "annotation",
                    "subFields": []
                  }
                ],
                "leaseFields": [
                  {
                    "id": "l_address_only",
                    "title": "Property Address",
                    "cats": [
                      "LEASE"
                    ],
                    "type": "annotation",
                    "subFields": []
                  }
                ],
                "firstTierFields": [
                  {
                    "id": "amending_agreement",
                    "title": "Amending Agreement",
                    "cats": [
                      "GENERAL"
                    ],
                    "type": "annotation",
                    "subFields": []
                  }
                ],
                "companyId": 1,
                "companyPrefix": "ebrevia",
                "company": {
                  "id": 1,
                  "name": "eBrevia",
                  "urlKey": "ebrevia",
                  "nlSplit": false,
                  "isTwoFactor": false
                },
                "roles": [
                  "ROLE_ANNOTATOR",
                  "ROLE_USER"
                ],
                "enabled": true
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a user by username",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "No JSON or text output. User deleted successfully."
          }
        }
      },
      "patch": {
        "summary": "Update user's properties",
        "description": "Can only update user's name and roles, and enable/disable user.",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "User properties to update",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "new full name of user",
                  "example": "Sample User"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "ROLE_ADMIN",
                      "ROLE_HELPDESK",
                      "ROLE_ORG_ADMIN",
                      "ROLE_USER",
                      "ROLE_CREATE",
                      "ROLE_ANNOTATOR, ROLE_DEMO"
                    ]
                  },
                  "description": "new roles of user"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "enable user or not"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An updated user object",
            "examples": {
              "application/json": {
                "matters": [
                  {
                    "id": 1,
                    "title": "Project Alpha",
                    "homedir": {
                      "path": ".../project_alpha"
                    },
                    "urlKey": "project_alpha",
                    "company": {
                      "id": 1,
                      "name": "eBrevia",
                      "urlKey": "ebrevia",
                      "nlSplit": false,
                      "isTwoFactor": false
                    },
                    "customFields": [],
                    "product": "DILIGENCE",
                    "downloadAllowed": true,
                    "ocrAllImages": false,
                    "userRoles": {
                      "admin": "ROLE_STANDARD_USER"
                    },
                    "isRemote": false
                  },
                  {
                    "id": 2,
                    "title": "Project Beta",
                    "homedir": {
                      "path": ".../project_beta"
                    },
                    "urlKey": "project_beta",
                    "company": {
                      "id": 1,
                      "name": "eBrevia",
                      "urlKey": "ebrevia",
                      "nlSplit": false,
                      "isTwoFactor": false
                    },
                    "customFields": [],
                    "product": "DILIGENCE",
                    "downloadAllowed": true,
                    "ocrAllImages": false,
                    "userRoles": {
                      "admin": "ROLE_STANDARD_USER"
                    },
                    "isRemote": false
                  }
                ],
                "username": "sampleuser@sample.com",
                "name": "Sample User",
                "extractorPrefs": {
                  "username": "sampleuser@sample.com",
                  "lastDir": "",
                  "lastMatter": {
                    "id": 1,
                    "title": "Ned Gannon's Matter",
                    "homedir": {
                      "path": ".../sample"
                    },
                    "urlKey": "sample",
                    "company": {
                      "id": 1,
                      "name": "eBrevia",
                      "urlKey": "ebrevia",
                      "nlSplit": false,
                      "isTwoFactor": false
                    },
                    "customFields": [],
                    "product": "DILIGENCE",
                    "downloadAllowed": true,
                    "ocrAllImages": false,
                    "userRoles": {
                      "admin": "ROLE_STANDARD_USER"
                    },
                    "isRemote": false
                  },
                  "uploadedDocsCount": 12,
                  "analyzedDocsCount": 0,
                  "productStage": "TRAINED_NEW_WORKFLOW"
                },
                "isAnnotator": true,
                "isAdmin": false,
                "isHelpdesk": false,
                "isOrgAdmin": false,
                "isOrgMember": false,
                "isOnprem": false,
                "isDemo": false,
                "isCreateUser": false,
                "fields": [
                  {
                    "id": "amending_agreement",
                    "title": "Amending Agreement",
                    "cats": [
                      "GENERAL"
                    ],
                    "type": "annotation",
                    "subFields": []
                  }
                ],
                "leaseFields": [
                  {
                    "id": "l_address_only",
                    "title": "Property Address",
                    "cats": [
                      "LEASE"
                    ],
                    "type": "annotation",
                    "subFields": []
                  }
                ],
                "firstTierFields": [
                  {
                    "id": "amending_agreement",
                    "title": "Amending Agreement",
                    "cats": [
                      "GENERAL"
                    ],
                    "type": "annotation",
                    "subFields": []
                  }
                ],
                "companyId": 1,
                "companyPrefix": "ebrevia",
                "company": {
                  "id": 1,
                  "name": "eBrevia",
                  "urlKey": "ebrevia",
                  "nlSplit": false,
                  "isTwoFactor": false
                },
                "roles": [
                  "ROLE_ANNOTATOR",
                  "ROLE_USER"
                ],
                "enabled": true
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Create a new user",
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "The user to create",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "sampleuser@sample.com"
                },
                "fullname": {
                  "type": "string",
                  "example": "Sample User"
                },
                "matterId": {
                  "type": "integer",
                  "description": "-1 to indicate create user in sample project only",
                  "example": -1
                },
                "companyname": {
                  "type": "string",
                  "description": "full name of company",
                  "example": "Sample Org"
                },
                "send-email": {
                  "type": "boolean",
                  "description": "if need to send reset-password-link to user's email address"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User info wrapped in an array",
            "examples": {
              "application/json": [
                {
                  "username": "sampleuser@sample.com",
                  "passwordResetUrl": "http://sample_org/resetPassword.html?username=sampleuser@sample.com&key=Ujh4wa0WhCKOqkCGO7T80pHmlQ2oYJt5ykPMjmcChHQ9c45ADt"
                }
              ]
            }
          }
        }
      }
    },
    "/notifications": {
      "get": {
        "summary": "Get the API requester's non-hidden notifications",
        "tags": [
          "notification"
        ],
        "responses": {
          "200": {
            "description": "An array of notififcations",
            "examples": {
              "application/json": [
                {
                  "notificationId": 1,
                  "notificationRefId": 1,
                  "title": "Sample notification",
                  "content": "Sample content",
                  "scope": "system",
                  "scopeId": "null",
                  "linkText": "Click me",
                  "linkUrl": "https://www.wikipedia.org/",
                  "deliverByDate": "2021-04-03T20:00:00.000Z",
                  "expirationDate": "2021-12-30T00:00:00.000Z",
                  "status": "delivered",
                  "isRead": true
                },
                {
                  "notificationId": 2,
                  "notificationRefId": 6,
                  "title": "Sample notification",
                  "content": "Sample content",
                  "scope": "user",
                  "scopeId": "admin",
                  "linkText": "Click me",
                  "linkUrl": "https://www.wikipedia.org/",
                  "deliverByDate": "2021-04-03T20:00:00.000Z",
                  "expirationDate": "2021-12-30T00:00:00.000Z",
                  "status": "delivered",
                  "isRead": false
                }
              ]
            }
          }
        }
      },
      "patch": {
        "summary": "Update notifications by notification ID as read, or hidden ",
        "tags": [
          "notification"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "notificationRefIds",
            "description": "The refIds to be updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "notificationRefIds": {
                  "type": "array",
                  "example": "[1, 2, 3]",
                  "items": {
                    "type": "integer"
                  }
                },
                "state": {
                  "type": "string",
                  "example": "isRead"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of notificationRefIds of notifications that are succesfully updated",
            "examples": {
              "application/json": [
                1,
                2,
                3
              ]
            }
          }
        }
      },
      "post": {
        "summary": "Create a new notification",
        "tags": [
          "notification"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "",
            "description": "The notification to create",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "New Title"
                },
                "content": {
                  "type": "string",
                  "example": "New Content"
                },
                "scope": {
                  "type": "string",
                  "enum": [
                    "system",
                    "organization",
                    "user"
                  ],
                  "example": "organization"
                },
                "scopeId": {
                  "type": "string",
                  "example": "1"
                },
                "linkUrl": {
                  "type": "string",
                  "example": "https://www.wikipedia.org/"
                },
                "linkText": {
                  "type": "string",
                  "example": "Click Me"
                },
                "deliverByDate": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2021-04-03T20:00:00.000Z"
                },
                "expirationDate": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2021-12-30T00:00:00.000Z"
                },
                "deliverNow": {
                  "type": "boolean",
                  "example": "false"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Newly created notification id",
            "examples": {
              "application/json": 1
            }
          }
        }
      }
    },
    "/notifications/{notificationId}": {
      "patch": {
        "summary": "Update notification's data",
        "tags": [
          "notification"
        ],
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "description": "notificationId",
            "required": true,
            "type": "integer"
          },
          {
            "name": "Blaat",
            "in": "body",
            "description": "The fields to be updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                },
                "scope": {
                  "type": "string",
                  "enum": [
                    "system",
                    "organization",
                    "user"
                  ]
                },
                "scopeId": {
                  "type": "string"
                },
                "linkUrl": {
                  "type": "string"
                },
                "linkText": {
                  "type": "string"
                },
                "deliverByDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "expirationDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "deliverNow": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Newly created notification id",
            "examples": {
              "application/json": 1
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a notification by notificationId",
        "description": "Deletes a notification, and all references, permanently",
        "tags": [
          "notification"
        ],
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "description": "notificationId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "No JSON or text output. Notification deleted successfully."
          }
        }
      }
    },
    "/orgs": {
      "get": {
        "summary": "Get the API requester's organizations",
        "tags": [
          "organization"
        ],
        "responses": {
          "200": {
            "description": "An array of organizations",
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "name": "eBrevia",
                  "urlKey": "ebrevia",
                  "nlSplit": false,
                  "isTwoFactor": false
                },
                {
                  "id": 2,
                  "name": "Sample Co",
                  "urlKey": "sampleco",
                  "nlSplit": false,
                  "isTwoFactor": false
                }
              ]
            }
          }
        }
      }
    },
    "/orgs/{org}": {
      "get": {
        "summary": "Get an organization by url key",
        "tags": [
          "organization"
        ],
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "organization url key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An organization object",
            "examples": {
              "application/json": {
                "id": 3,
                "name": "Sample Org",
                "urlKey": "sample_org",
                "nlSplit": false,
                "isTwoFactor": false
              }
            }
          }
        }
      }
    },
    "/projects": {
      "get": {
        "summary": "Get a list of accessible projects by the user",
        "tags": [
          "project"
        ],
        "responses": {
          "200": {
            "description": "An array of projects",
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "title": "Project Alpha",
                  "homedir": {
                    "path": ".../project_alpha"
                  },
                  "urlKey": "project_alpha",
                  "clientId": "CID_1234567890",
                  "matterId": "MID_1234567890",
                  "company": {
                    "id": 1,
                    "name": "eBrevia",
                    "urlKey": "ebrevia",
                    "nlSplit": false,
                    "isTwoFactor": false
                  },
                  "customFields": [],
                  "product": "DILIGENCE",
                  "downloadAllowed": true,
                  "ocrAllImages": false,
                  "userRoles": {
                    "admin": "ROLE_STANDARD_USER"
                  },
                  "isRemote": false
                },
                {
                  "id": 2,
                  "title": "Project Beta",
                  "homedir": {
                    "path": ".../project_beta"
                  },
                  "urlKey": "project_beta",
                  "clientId": "CID_1234567891",
                  "matterId": "MID_1234567891",
                  "company": {
                    "id": 1,
                    "name": "eBrevia",
                    "urlKey": "ebrevia",
                    "nlSplit": false,
                    "isTwoFactor": false
                  },
                  "customFields": [],
                  "product": "DILIGENCE",
                  "downloadAllowed": true,
                  "ocrAllImages": false,
                  "userRoles": {
                    "admin": "ROLE_STANDARD_USER"
                  },
                  "isRemote": false
                }
              ]
            }
          }
        }
      },
      "post": {
        "summary": "Create a new project",
        "tags": [
          "project"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "access info",
            "description": "The project to create",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "companyName": {
                  "type": "string",
                  "description": "full name of company",
                  "example": "eBrevia"
                },
                "languages": {
                  "description": "array of language codes",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "en",
                      "de",
                      "pt",
                      "ru",
                      "es",
                      "sv",
                      "fr",
                      "zh",
                      "zh-tw",
                      "ja",
                      "ko",
                      "it",
                      "pl",
                      "nl",
                      "fi"
                    ]
                  }
                },
                "matterName": {
                  "type": "string",
                  "description": "full name of the new project",
                  "example": "Sample Project"
                },
                "clientId": {
                  "type": "string",
                  "description": "Client ID",
                  "example": "MMAAHH123456"
                },
                "matterId": {
                  "type": "string",
                  "description": "Matter ID",
                  "example": "123456"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A project object",
            "examples": {
              "application/json": {
                "id": 1,
                "title": "Project Alpha",
                "homedir": {
                  "path": ".../project_alpha"
                },
                "urlKey": "project_alpha",
                "clientId": "CID_1234567890",
                "matterId": "MID_1234567890",
                "company": {
                  "id": 1,
                  "name": "eBrevia",
                  "urlKey": "ebrevia",
                  "nlSplit": false,
                  "isTwoFactor": false
                },
                "customFields": [
                  {
                    "idNum": 1,
                    "enabled": true,
                    "options": [],
                    "matterId": 1,
                    "id": "cust_1",
                    "title": "test_example_provision",
                    "type": "annotation",
                    "subFields": []
                  },
                  {
                    "idNum": 2,
                    "enabled": true,
                    "options": [],
                    "matterId": 1,
                    "id": "cust_2",
                    "title": "example_provision_2",
                    "type": "annotation",
                    "subFields": []
                  },
                  {
                    "idNum": 3,
                    "enabled": true,
                    "options": [],
                    "matterId": 1,
                    "id": "cust_3",
                    "title": "example_provision_3",
                    "type": "annotation",
                    "subFields": []
                  },
                  {
                    "idNum": 4,
                    "enabled": true,
                    "options": [],
                    "matterId": 1,
                    "activeModel": {
                      "id": 7,
                      "remoteId": 1843,
                      "name": "new model 2",
                      "type": "SENTENCE",
                      "oneBest": false,
                      "created": "10/19/2018 17:14",
                      "recall": 0,
                      "precision": 0,
                      "score": 0,
                      "confusionTT": 0,
                      "confusionTF": 6,
                      "confusionFT": 0,
                      "confusionFF": 0,
                      "fieldId": 4
                    },
                    "id": "cust_4",
                    "title": "base salary",
                    "type": "annotation",
                    "subFields": []
                  }
                ],
                "product": "DILIGENCE",
                "downloadAllowed": true,
                "ocrAllImages": false,
                "userRoles": {
                  "admin": "ROLE_MANAGER"
                },
                "isRemote": false
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}": {
      "parameters": [
        {
          "name": "projectId",
          "in": "path",
          "description": "project id",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "summary": "Get a project by id",
        "tags": [
          "project"
        ],
        "responses": {
          "200": {
            "description": "A project object",
            "examples": {
              "application/json": {
                "id": 1,
                "title": "Project Alpha",
                "homedir": {
                  "path": ".../project_alpha"
                },
                "urlKey": "project_alpha",
                "clientId": "CID_1234567890",
                "matterId": "MID_1234567890",
                "company": {
                  "id": 1,
                  "name": "eBrevia",
                  "urlKey": "ebrevia",
                  "nlSplit": false,
                  "isTwoFactor": false
                },
                "customFields": [],
                "product": "DILIGENCE",
                "downloadAllowed": true,
                "ocrAllImages": false,
                "userRoles": {
                  "admin": "ROLE_MANAGER"
                },
                "isRemote": false
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a project by id",
        "tags": [
          "project"
        ],
        "responses": {
          "200": {
            "description": "No JSON or text output. Project deleted successfully."
          }
        }
      }
    },
    "/projects/{projectId}/custom-fields": {
      "get": {
        "summary": "Get a list of custom provisions available in a project.",
        "tags": [
          "project"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of custom provision.",
            "examples": {
              "application/json": [
                {
                  "idNum": 1,
                  "enabled": true,
                  "options": [],
                  "matterId": 1,
                  "id": "cust_1",
                  "title": "test_example_provision",
                  "type": "annotation",
                  "subFields": []
                },
                {
                  "idNum": 4,
                  "enabled": true,
                  "options": [],
                  "matterId": 1,
                  "activeModel": {
                    "id": 7,
                    "remoteId": 1843,
                    "name": "new model 2",
                    "type": "SENTENCE",
                    "oneBest": false,
                    "created": "10/19/2018 17:14",
                    "recall": 0,
                    "precision": 0,
                    "score": 0,
                    "confusionTT": 0,
                    "confusionTF": 6,
                    "confusionFT": 0,
                    "confusionFF": 0,
                    "fieldId": 4
                  },
                  "id": "cust_4",
                  "title": "base salary",
                  "type": "annotation",
                  "subFields": []
                }
              ]
            }
          }
        }
      },
      "post": {
        "summary": "Create a custom field in a project",
        "tags": [
          "project"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Parameters of the custom field",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "description": "Name of the new custom provision.",
                  "type": "string"
                },"options": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/option"
                  }
                },
                "type": {
                  "description": "Type of the new custom provision.",
                  "type": "string",
                  "enum": [
                      "text",
                      "textbox",
                      "number",
                      "date",
                      "money",
                      "boolean",
                      "multiselect",
                      "dropdown",
                      "instruction",
                      "rent_steps",
                      "annotation"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
          "description": "Created custom provision.",
            "examples": {
              "application/json": {
                  "idNum": 1,
                  "enabled": true,
                  "options": [],
                  "matterId": 1,
                  "id": "cust_1",
                  "title": "test_example_provision",
                  "type": "annotation",
                  "subFields": []
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/custom-fields/{custId}": {
      "post": {
        "summary": "Update a custom field in a project",
        "tags": [
          "project"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "custId",
            "in": "path",
            "description": "custom field id cust_xx",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New parameters of the custom field",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "description": "New name of the custom provision.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
          "description": "Updated custom provision.",
            "examples": {
              "application/json": {
                  "idNum": 1,
                  "enabled": true,
                  "options": [],
                  "matterId": 1,
                  "id": "cust_1",
                  "title": "test_example_provision",
                  "type": "annotation",
                  "subFields": []
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a custom field in a project",
        "tags": [
          "project"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "custId",
            "in": "path",
            "description": "custom field id cust_xx",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
          "description": "No JSON output."
          }
        }
      }
    },
    "/projects/{projectId}/forms": {
      "get": {
        "summary": "Get a list of summary forms available in a project.",
        "tags": [
          "project"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of summary forms",
            "examples": {
              "application/json": {
                "matterForms": [
                  {
                    "id": 1,
                    "name": "default",
                    "fieldIds": [
                      "amending_agreement",
                      "arbitration",
                      "assign",
                      "change_control",
                      "choiceoflaw",
                      "confidentiality",
                      "date",
                      "effectivedate_auto",
                      "equitable_relief",
                      "events_default",
                      "exclusivity",
                      "force_majeure",
                      "indemnify",
                      "insurance",
                      "jurisdiction",
                      "jury_trial",
                      "limliability",
                      "nonsolicit",
                      "party",
                      "renewal",
                      "securities_transfer",
                      "survival",
                      "term",
                      "termination",
                      "third_party_bene",
                      "title",
                      "cust_18",
                      "cust_17",
                      "cust_12"
                    ],
                    "createdDate": "2018-09-07T15:24:27Z",
                    "modDate": "2018-09-26T00:02:12Z",
                    "modBy": {
                      "username": "admin",
                      "password": "$2a$10$lFvUhQ98wrYdKmzGBu.Yq.MNNj5kikVwWr5sitMGdIIvcCBCw1zqG",
                      "name": "Sample Admin",
                      "enabled": true,
                      "lastLogin": "Oct 8, 2018",
                      "companyId": 1,
                      "matters": [
                        {
                          "id": 1,
                          "title": "Project Alpha",
                          "homedir": {
                            "path": ".../project_alpha"
                          },
                          "urlKey": "project_alpha",
                          "company": {
                            "id": 1,
                            "name": "eBrevia",
                            "urlKey": "ebrevia",
                            "nlSplit": false,
                            "isTwoFactor": false
                          },
                          "customFields": [],
                          "product": "DILIGENCE",
                          "downloadAllowed": true,
                          "ocrAllImages": false,
                          "userRoles": {
                            "admin": "ROLE_MANAGER"
                          },
                          "isRemote": false
                        }
                      ]
                    },
                    "documentsApplied": 1621,
                    "trainedFields": 37,
                    "customFields": 0,
                    "totalFields": 44
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/forms/{formId}": {
      "parameters": [
        {
          "name": "projectId",
          "in": "path",
          "description": "project id",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "summary": "Get a summary form by form id in a project.",
        "tags": [
          "project"
        ],
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "description": "form id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of summary forms",
            "examples": {
              "application/json": {
                "id": 1,
                "name": "default",
                "fieldIds": [
                  "amending_agreement",
                  "arbitration",
                  "assign",
                  "change_control",
                  "choiceoflaw",
                  "confidentiality",
                  "date",
                  "effectivedate_auto",
                  "equitable_relief",
                  "events_default",
                  "exclusivity",
                  "force_majeure",
                  "indemnify",
                  "insurance",
                  "jurisdiction",
                  "jury_trial",
                  "limliability",
                  "nonsolicit",
                  "party",
                  "renewal",
                  "securities_transfer",
                  "survival",
                  "term",
                  "termination",
                  "third_party_bene",
                  "title",
                  "cust_18",
                  "cust_17",
                  "cust_12"
                ],
                "createdDate": "2018-09-07T15:24:27Z",
                "modDate": "2018-09-26T00:02:12Z",
                "modBy": {
                  "username": "admin",
                  "password": "$2a$10$lFvUhQ98wrYdKmzGBu.Yq.MNNj5kikVwWr5sitMGdIIvcCBCw1zqG",
                  "name": "Sample Admin",
                  "enabled": true,
                  "lastLogin": "Oct 8, 2018",
                  "companyId": 1,
                  "matters": [
                    {
                      "id": 1,
                      "title": "Project Alpha",
                      "homedir": {
                        "path": ".../project_alpha"
                      },
                      "urlKey": "project_alpha",
                      "company": {
                        "id": 1,
                        "name": "eBrevia",
                        "urlKey": "ebrevia",
                        "nlSplit": false,
                        "isTwoFactor": false
                      },
                      "customFields": [],
                      "product": "DILIGENCE",
                      "downloadAllowed": true,
                      "ocrAllImages": false,
                      "userRoles": {
                        "admin": "ROLE_MANAGER"
                      },
                      "isRemote": false
                    }
                  ]
                },
                "documentsApplied": 1621,
                "trainedFields": 37,
                "customFields": 0,
                "totalFields": 44
              }
            }
          }
        }
      },
      "post": {
        "summary": "Update fields in a summary form by form id",
        "tags": [
          "project"
        ],
        "parameters": [
          {
            "name": "formId",
            "in": "path",
            "description": "form id; or \"default\" to update fields in the default summary form",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "fields",
            "description": "The updated field list",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "fieldIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "list of field ids"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A form object with updated field ids",
            "examples": {
              "application/json": {
                "id": 1,
                "name": "default",
                "fieldIds": [
                  "amending_agreement",
                  "arbitration",
                  "assign",
                  "change_control",
                  "choiceoflaw",
                  "confidentiality",
                  "date",
                  "effectivedate_auto",
                  "equitable_relief",
                  "events_default",
                  "exclusivity",
                  "force_majeure",
                  "indemnify",
                  "insurance",
                  "jurisdiction",
                  "jury_trial",
                  "limliability",
                  "nonsolicit",
                  "party",
                  "renewal",
                  "securities_transfer",
                  "survival",
                  "term",
                  "termination",
                  "third_party_bene",
                  "title",
                  "cust_18",
                  "cust_17",
                  "cust_12"
                ],
                "createdDate": "2018-09-07T15:24:27Z",
                "modDate": "2018-09-26T00:02:12Z",
                "modBy": {
                  "username": "admin",
                  "password": "$2a$10$lFvUhQ98wrYdKmzGBu.Yq.MNNj5kikVwWr5sitMGdIIvcCBCw1zqG",
                  "name": "Sample Admin",
                  "enabled": true,
                  "lastLogin": "Oct 8, 2018",
                  "companyId": 1,
                  "matters": [
                    {
                      "id": 1,
                      "title": "Project Alpha",
                      "homedir": {
                        "path": ".../project_alpha"
                      },
                      "urlKey": "project_alpha",
                      "company": {
                        "id": 1,
                        "name": "eBrevia",
                        "urlKey": "ebrevia",
                        "nlSplit": false,
                        "isTwoFactor": false
                      },
                      "customFields": [],
                      "product": "DILIGENCE",
                      "downloadAllowed": true,
                      "ocrAllImages": false,
                      "userRoles": {
                        "admin": "ROLE_MANAGER"
                      },
                      "isRemote": false
                    }
                  ]
                },
                "documentsApplied": 1621,
                "trainedFields": 37,
                "customFields": 0,
                "totalFields": 44
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/users/{username}": {
      "parameters": [
        {
          "name": "projectId",
          "in": "path",
          "description": "project id",
          "required": true,
          "type": "integer"
        },
        {
          "name": "username",
          "in": "path",
          "description": "username",
          "required": true,
          "type": "string"
        }
      ],
      "put": {
        "summary": "Add project access to a user, or update users's role in a project",
        "tags": [
          "security"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "role",
            "description": "The user's project role",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "role": {
                  "type": "string",
                  "description": "user's role in project",
                  "enum": [
                    "ROLE_READONLY_USER",
                    "ROLE_SUMMARIZE_ONLY_USER",
                    "ROLE_RESTRICTED_USER",
                    "ROLE_STANDARD_USER",
                    "ROLE_MANAGER"
                  ],
                  "example": "ROLE_STANDARD_USER"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No JSON or text output. User added to project successfully."
          }
        }
      },
      "delete": {
        "summary": "Revoke project access from a user.",
        "tags": [
          "security"
        ],
        "responses": {
          "200": {
            "description": "No JSON or text output. User's access is revoked from project successfully."
          }
        }
      }
    },
    "/projects/{projectId}/access": {
      "parameters": [
        {
          "name": "projectId",
          "in": "path",
          "description": "project id",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "summary": "Get access info of a document or folder in a project",
        "tags": [
          "security"
        ],
        "parameters": [
          {
            "name": "objectType",
            "in": "query",
            "description": "type of object",
            "required": true,
            "type": "string",
            "enum": [
              "FOLDER",
              "FILE"
            ]
          },
          {
            "name": "objectName",
            "in": "query",
            "description": "for FOLDER type object, this is the full path of folder; for FILE type object, this is the document id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of access info entries.",
            "examples": {
              "application/json": [
                {
                  "aceID": 31,
                  "group_id": 97,
                  "principal_type": "GROUP",
                  "object_name": "matters/sample_org/sample folder",
                  "object_type": "FOLDER",
                  "permission_level": "EDIT",
                  "group_name": "ALL"
                },
                {
                  "aceID": 21,
                  "username": "paralegal@biglaw.com",
                  "group_id": 0,
                  "principal_type": "USERNAME",
                  "object_name": "matters/sample_org/sample folder",
                  "object_type": "FOLDER",
                  "permission_level": "EDIT",
                  "name": "Jim Miller"
                },
                {
                  "aceID": 34,
                  "username": "admin",
                  "group_id": 0,
                  "principal_type": "USERNAME",
                  "object_name": "matters/sample_org/sample folder",
                  "object_type": "FOLDER",
                  "permission_level": "EDIT",
                  "name": "Sample Admin"
                }
              ]
            }
          }
        }
      },
      "post": {
        "summary": "Add access info to a document or folder in a project",
        "tags": [
          "security"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "access info",
            "description": "The access info to add",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "object_name": {
                  "type": "string",
                  "description": "for FOLDER type object, this is the full path of folder; for FILE type object, this is the document id."
                },
                "object_type": {
                  "type": "string",
                  "enum": [
                    "FOLDER",
                    "FILE"
                  ],
                  "example": "FOLDER"
                },
                "permission_level": {
                  "type": "string",
                  "enum": [
                    "READONLY",
                    "EDIT",
                    "NONE"
                  ]
                },
                "principal_type": {
                  "type": "string",
                  "enum": [
                    "USERNAME",
                    "GROUP"
                  ],
                  "example": "USERNAME"
                },
                "username": {
                  "type": "string",
                  "description": "required if principal_type is USERNAME",
                  "example": "sampleuser@sample.com"
                },
                "group_id": {
                  "type": "integer",
                  "description": "required if principal_type is GROUP"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An access info entry of a file or folder object.",
            "examples": {
              "application/json": {
                "aceID": 1,
                "username": "sampleuser@sample.com",
                "group_id": 0,
                "principal_type": "USERNAME",
                "object_name": "matters/sample_org/sample folder/",
                "object_type": "FOLDER",
                "permission_level": "EDIT",
                "name": "Sample User"
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/access/{aceId}": {
      "parameters": [
        {
          "name": "projectId",
          "in": "path",
          "description": "project id",
          "required": true,
          "type": "integer"
        },
        {
          "name": "aceId",
          "in": "path",
          "description": "access info entry id",
          "required": true,
          "type": "integer"
        }
      ],
      "put": {
        "summary": "Update access info of a document or folder in a project.",
        "tags": [
          "security"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "permission level",
            "description": "Permission level to update",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "permission_level": {
                  "type": "string",
                  "enum": [
                    "READONLY",
                    "EDIT",
                    "NONE"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An access info entry of a file or folder object.",
            "examples": {
              "application/json": {
                "aceID": 1,
                "username": "sampleuser@sample.com",
                "group_id": 0,
                "principal_type": "USERNAME",
                "object_name": "matters/sample_org/sample folder/",
                "object_type": "FOLDER",
                "permission_level": "READONLY",
                "name": "Sample User"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Revoke document or folder access.",
        "tags": [
          "security"
        ],
        "responses": {
          "200": {
            "description": "Text info to indicate access is revoked successfully",
            "examples": {
              "text": "success: true"
            }
          }
        }
      }
    },
    "/projects/{projectId}/folders": {
      "get": {
        "summary": "Get all the folders in a project",
        "tags": [
          "folder"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of folders",
            "schema": {
              "$ref": "#/definitions/folders"
            },
            "examples": {
              "application/json": [
                {
                  "name": "Aircraft Agreements",
                  "subFolders": [],
                  "permissionLevel": "EDIT"
                },
                {
                  "name": "Confidentiality Agreements",
                  "subFolders": [
                    {
                      "name": "testfolder",
                      "subFolders": [],
                      "permissionLevel": "EDIT"
                    }
                  ],
                  "permissionLevel": "EDIT"
                },
                {
                  "name": "Employment Agreements",
                  "subFolders": [],
                  "permissionLevel": "EDIT"
                },
                {
                  "name": "Leases",
                  "subFolders": [],
                  "permissionLevel": "EDIT"
                }
              ]
            }
          }
        }
      }
    },
    "/projects/{projectId}/folders/{folder path}/{new folder name}": {
      "post": {
        "summary": "Create a new folder",
        "tags": [
          "folder"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "folder path",
            "in": "path",
            "description": "location where the new folder will be created",
            "required": true,
            "type": "string"
          },
          {
            "name": "new folder name",
            "in": "path",
            "description": "name of the new folder to be created",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of folders",
            "schema": {
              "$ref": "#/definitions/folders"
            },
            "examples": {
              "application/json": [
                {
                  "name": "Aircraft Agreements",
                  "subFolders": [],
                  "permissionLevel": "EDIT"
                },
                {
                  "name": "Confidentiality Agreements",
                  "subFolders": [
                    {
                      "name": "testfolder",
                      "subFolders": [],
                      "permissionLevel": "EDIT"
                    }
                  ],
                  "permissionLevel": "EDIT"
                },
                {
                  "name": "Employment Agreements",
                  "subFolders": [],
                  "permissionLevel": "EDIT"
                },
                {
                  "name": "Leases",
                  "subFolders": [],
                  "permissionLevel": "EDIT"
                },
                {
                  "name": "My New Folder",
                  "subFolders": [],
                  "permissionLevel": "EDIT"
                }
              ]
            }
          }
        }
      }
    },
    "/projects/{projectId}/docs": {
      "parameters": [
        {
          "name": "projectId",
          "in": "path",
          "description": "project id",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "summary": "Get a list of a project’s documents",
        "tags": [
          "document"
        ],
        "responses": {
          "200": {
            "description": "An array of documents",
            "schema": {
              "$ref": "#/definitions/rows"
            },
            "examples": {
              "application/json": [
                {
                  "docId": 4,
                  "title": "Aircraft Time Sharing Agreement 3.10.09 Morgan Stanley John Mack.pdf",
                  "filename": "Aircraft Time Sharing Agreement 3.10.09 Morgan Stanley John Mack.pdf",
                  "dir": "Aircraft Agreements",
                  "file": {
                    "path": "...pdf"
                  },
                  "drm": "NONE",
                  "docStatus": "READY",
                  "modByUsername": "admin",
                  "modByName": "Sample Admin",
                  "defaultSum": 3,
                  "modDate": "Jul 11, 2017",
                  "defaultSumStatus": "COMPLETE",
                  "permissionLevel": "EDIT",
                  "defaultSumFields": "date,insurance,jurisdiction,ea_employment_term,l_mutual_waiver_subrogation,title,amending_agreement,limliability,l_expiration_date,choiceoflaw,l_rent,warranty,term,notice,termination,l_execution_date,l_no_lien,ea_termination_rights,l_term,pricing_salary,l_commencement_date,survival,l_landlord_repair,exclusivity,la_waiver_consequential_damages,l_default_rate,party,assign",
                  "poorScan": false,
                  "formId": 1,
                  "isNonContract": false,
                  "language": "en",
                  "docTypes": [
                    "Confidentiality/Non-Disclosure Agmt.",
                    "Non-Compete Agmt."
                  ],
                  "groupId": 0
                }
              ]
            }
          }
        }
      },
      "delete": {
        "summary": "Delete one or more documents by id",
        "tags": [
          "document"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "list of document ids",
            "required": true,
            "type": "array",
            "collectionFormat": "csv",
            "items": {
              "type": "integer"
            },
            "minItems": 1
          },
          {
            "name": "skipTrash",
            "in": "query",
            "description": "delete document immediately without moving it to trash",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "No JSON or text output. Documents deleted successfully."
          },
          "400": {
            "description": "Text output shows error messages of deletion failed reasons."
          }
        }
      },
      "post": {
        "summary": "Get information about one or more documents",
        "tags": [
          "document"
        ],
        "parameters": [
          {
            "name": "summary",
            "in": "query",
            "description": "include summary of the document",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "doc-text",
            "in": "query",
            "description": "include full text of the document",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "count",
            "in": "query",
            "description": "pagination parameter: number of documents returned per page, maximum count is 100",
            "required": false,
            "type": "integer"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "pagination parameter: start pointer of the next page of documents",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "user",
            "description": "The filtering options",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "docIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "folder": {
                  "type": "string"
                },
                "assignees": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "array of assignee usernames",
                  "example": [
                    "sampleuser@sample.com"
                  ]
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "array of data included in the document's summary"
                },
                "date": {
                  "$ref": "#/definitions/date"
                },
                "languages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "array of language codes",
                  "enum": [
                    "en",
                    "de",
                    "pt",
                    "ru",
                    "es",
                    "sv",
                    "fr",
                    "zh",
                    "zh-tw",
                    "ja",
                    "ko",
                    "it"
                  ]
                },
                "parties": {
                  "type": "string"
                },
                "status": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "enum": [
                    "UNREVIEWED",
                    "IN_PROCESS",
                    "COMPLETE",
                    "OCR_ERROR",
                    "PDF_CONVERT_ERROR",
                    "EXTRACTING_ERROR",
                    "NON_TEXT_DOCUMENT"
                  ]
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "array of tag names"
                },
                "types": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "array of document types"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "information about a document",
            "schema": {
              "$ref": "#/definitions/get-document-results"
            },
            "examples": {
              "application/json": {
                "documents": [
                  {
                    "document": {
                      "docId": 4,
                      "title": "Aircraft Time Sharing Agreement 3.10.09 Morgan Stanley John Mack.pdf",
                      "filename": "Aircraft Time Sharing Agreement 3.10.09 Morgan Stanley John Mack.pdf",
                      "dir": "Aircraft Agreements",
                      "file": {
                        "path": "...pdf"
                      },
                      "drm": "NONE",
                      "docStatus": "READY",
                      "modByUsername": "admin",
                      "modByName": "Sample Admin",
                      "defaultSum": 3,
                      "modDate": "Jul 11, 2017",
                      "defaultSumStatus": "COMPLETE",
                      "permissionLevel": "EDIT",
                      "defaultSumFields": "date,insurance,jurisdiction,ea_employment_term,l_mutual_waiver_subrogation,title,amending_agreement,limliability,l_expiration_date,choiceoflaw,l_rent,warranty,term,notice,termination,l_execution_date,l_no_lien,ea_termination_rights,l_term,pricing_salary,l_commencement_date,survival,l_landlord_repair,exclusivity,la_waiver_consequential_damages,l_default_rate,party,assign",
                      "poorScan": false,
                      "formId": 1,
                      "isNonContract": false,
                      "language": "en",
                      "docTypes": [
                        "Confidentiality/Non-Disclosure Agmt.",
                        "Non-Compete Agmt."
                      ],
                      "groupId": 0,
                      "text": "This Aircraft Time Sharing Agreement between eBrevia, Inc. and Newco, Inc., dated September 2, 1998..."
                    },
                    "summary": {
                      "data": {
                        "party": [
                          {
                            "start": 29,
                            "end": 42,
                            "type": "party",
                            "id": "0",
                            "text": "eBrevia, Inc.",
                            "confidence": 1,
                            "correctness": "UNKNOWN",
                            "customText": false,
                            "manualEntry": false,
                            "docId": 9243,
                            "docTitle": "lease1.docx"
                          },
                          {
                            "start": 47,
                            "end": 58,
                            "type": "party",
                            "id": "0",
                            "text": "Newco, Inc.",
                            "confidence": 1,
                            "correctness": "UNKNOWN",
                            "customText": false,
                            "manualEntry": false,
                            "docId": 9243,
                            "docTitle": "lease1.docx"
                          }
                        ],
                        "date": [
                          {
                            "start": 66,
                            "end": 83,
                            "type": "date",
                            "id": "0",
                            "text": "September 2, 1998",
                            "confidence": 1,
                            "correctness": "UNKNOWN",
                            "customText": false,
                            "manualEntry": false,
                            "docId": 9243,
                            "docTitle": "lease1.docx"
                          }
                        ]
                      },
                      "modDate": "2017-08-10T03:38:57Z",
                      "modBy": {
                        "username": "user",
                        "name": "Sample User",
                        "companyId": 1
                      },
                      "status": "COMPLETE"
                    }
                  }
                ],
                "next_cursor": ""
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update properties of one or more documents and/or folders",
        "tags": [
          "document"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "properties",
            "description": "Document's properties to update",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "docIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  },
                  "description": "array of ids of documents to update"
                },
                "folders": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "array of folders to update"
                },
                "assigneeUsername": {
                  "type": "string",
                  "description": "new assignee username"
                },
                "status": {
                  "type": "string",
                  "description": "new status",
                  "enum": [
                    "UNREVIEWED",
                    "IN_PROCESS",
                    "COMPLETE"
                  ]
                },
                "formId": {
                  "type": "integer",
                  "description": "new form id"
                },
                "dir": {
                  "type": "string",
                  "description": "path of new folder"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of ids of documents that are succesfully updated",
            "examples": {
              "application/json": [
                1,
                2,
                3
              ]
            }
          }
        }
      }
    },
    "/projects/{projectId}/docs/{groupId}/group-members": {
      "post": {
        "summary": "Group and ungroup documents",
        "tags": [
          "document"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "group id, which is also the parent doc id of the group",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "docIds",
            "description": "list of child doc ids",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "docIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  },
                  "description": "array of child document ids that will be in the group, empty list will remove all documents from the group"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of document in the group",
            "examples": {
              "application/json": [
                {
                  "docId": 4,
                  "title": "Aircraft Time Sharing Agreement 3.10.09 Morgan Stanley John Mack.pdf",
                  "filename": "Aircraft Time Sharing Agreement 3.10.09 Morgan Stanley John Mack.pdf",
                  "dir": "Aircraft Agreements",
                  "file": {
                    "path": "...pdf"
                  },
                  "drm": "NONE",
                  "docStatus": "READY",
                  "modByUsername": "admin",
                  "modByName": "Sample Admin",
                  "defaultSum": 3,
                  "modDate": "Jul 11, 2017",
                  "defaultSumStatus": "COMPLETE",
                  "permissionLevel": "EDIT",
                  "defaultSumFields": "date,insurance,jurisdiction,ea_employment_term,l_mutual_waiver_subrogation,title,amending_agreement,limliability,l_expiration_date,choiceoflaw,l_rent,warranty,term,notice,termination,l_execution_date,l_no_lien,ea_termination_rights,l_term,pricing_salary,l_commencement_date,survival,l_landlord_repair,exclusivity,la_waiver_consequential_damages,l_default_rate,party,assign",
                  "poorScan": false,
                  "formId": 1,
                  "isNonContract": false,
                  "language": "en",
                  "docTypes": [
                    "Confidentiality/Non-Disclosure Agmt.",
                    "Non-Compete Agmt."
                  ],
                  "groupId": 4,
                  "orderInGroup": 1
                },
                {
                  "docId": 5,
                  "title": "Accounting Services Agreement 8.3.12 LipimetiX Capstone.pdf",
                  "filename": "Accounting Services Agreement 8.3.12 LipimetiX Capstone.pdf",
                  "dir": "Aircraft Agreements",
                  "file": {
                    "path": "...pdf"
                  },
                  "drm": "NONE",
                  "docStatus": "READY",
                  "modByUsername": "admin",
                  "modByName": "Sample Admin",
                  "defaultSum": 3,
                  "modDate": "Jul 11, 2017",
                  "defaultSumStatus": "COMPLETE",
                  "permissionLevel": "EDIT",
                  "defaultSumFields": "date,insurance,jurisdiction,ea_employment_term,l_mutual_waiver_subrogation,title,amending_agreement,limliability,l_expiration_date,choiceoflaw,l_rent,warranty,term,notice,termination,l_execution_date,l_no_lien,ea_termination_rights,l_term,pricing_salary,l_commencement_date,survival,l_landlord_repair,exclusivity,la_waiver_consequential_damages,l_default_rate,party,assign",
                  "poorScan": false,
                  "formId": 1,
                  "isNonContract": false,
                  "language": "en",
                  "docTypes": [
                    "Assignment & Assumption Agmt.",
                    "Consulting Services Agmt."
                  ],
                  "groupId": 4,
                  "orderInGroup": 2
                }
              ]
            }
          }
        }
      }
    },
    "/projects/{projectId}/docs/{doc_id}": {
      "get": {
        "summary": "Get information about a document",
        "tags": [
          "document"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "doc_id",
            "in": "path",
            "description": "document id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "doc-text",
            "in": "query",
            "description": "include full text of the document",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "information about a document",
            "schema": {
              "$ref": "#/definitions/row"
            },
            "examples": {
              "application/json": {
                "docId": 4,
                "title": "Aircraft Time Sharing Agreement 3.10.09 Morgan Stanley John Mack.pdf",
                "filename": "Aircraft Time Sharing Agreement 3.10.09 Morgan Stanley John Mack.pdf",
                "dir": "Aircraft Agreements",
                "file": {
                  "path": "...pdf"
                },
                "drm": "NONE",
                "docStatus": "READY",
                "modByUsername": "admin",
                "modByName": "Sample Admin",
                "defaultSum": 3,
                "modDate": "Jul 11, 2017",
                "defaultSumStatus": "COMPLETE",
                "permissionLevel": "EDIT",
                "defaultSumFields": "date,insurance,jurisdiction,ea_employment_term,l_mutual_waiver_subrogation,title,amending_agreement,limliability,l_expiration_date,choiceoflaw,l_rent,warranty,term,notice,termination,l_execution_date,l_no_lien,ea_termination_rights,l_term,pricing_salary,l_commencement_date,survival,l_landlord_repair,exclusivity,la_waiver_consequential_damages,l_default_rate,party,assign",
                "poorScan": false,
                "formId": 1,
                "isNonContract": false,
                "language": "en",
                "docTypes": [
                  "Confidentiality/Non-Disclosure Agmt.",
                  "Non-Compete Agmt."
                ],
                "groupId": 0,
                "text": "This Aircraft Time Sharing Agreement between eBrevia, Inc. and Newco, Inc., dated September 2, 1998..."
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/docs/{docId}/summary": {
      "parameters": [
        {
          "name": "projectId",
          "in": "path",
          "description": "project id",
          "required": true,
          "type": "integer"
        },
        {
          "name": "docId",
          "in": "path",
          "description": "document id",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "summary": "Get a document’s generated summary information by eBrevia's intelligent analytics",
        "tags": [
          "document"
        ],
        "responses": {
          "200": {
            "description": "summary information from the analytics engine about a document",
            "schema": {
              "$ref": "#/definitions/summary"
            },
            "examples": {
              "application/json": {
                "data": {
                  "party": [
                    {
                      "start": 29,
                      "end": 42,
                      "type": "party",
                      "id": "0",
                      "text": "eBrevia, Inc.",
                      "confidence": 1,
                      "correctness": "UNKNOWN",
                      "customText": false,
                      "manualEntry": false,
                      "docId": 9243,
                      "docTitle": "lease1.docx"
                    },
                    {
                      "start": 47,
                      "end": 58,
                      "type": "party",
                      "id": "0",
                      "text": "Newco, Inc.",
                      "confidence": 1,
                      "correctness": "UNKNOWN",
                      "customText": false,
                      "manualEntry": false,
                      "docId": 9243,
                      "docTitle": "lease1.docx"
                    }
                  ],
                  "date": [
                    {
                      "start": 66,
                      "end": 83,
                      "type": "date",
                      "id": "0",
                      "text": "September 2, 1998",
                      "confidence": 1,
                      "correctness": "UNKNOWN",
                      "customText": false,
                      "manualEntry": false,
                      "docId": 9243,
                      "docTitle": "lease1.docx"
                    }
                  ]
                },
                "modDate": "2017-08-10T03:38:57Z",
                "modBy": {
                  "username": "user",
                  "name": "Sample User",
                  "companyId": 1
                },
                "status": "COMPLETE"
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update document summary's field values",
        "tags": [
          "document"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "Fields with updated values\n\nReplace field name with actual field name in the summary",
            "required": false,
            "schema": {
              "$ref": "#/definitions/summaryData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "summary information with updated field values",
            "schema": {
              "$ref": "#/definitions/summary"
            },
            "examples": {
              "application/json": {
                "data": {
                  "party": [
                    {
                      "start": 29,
                      "end": 42,
                      "type": "party",
                      "id": "0",
                      "text": "eBrevia, Inc.",
                      "confidence": 1,
                      "correctness": "UNKNOWN",
                      "customText": false,
                      "manualEntry": false,
                      "docId": 9243,
                      "docTitle": "lease1.docx"
                    },
                    {
                      "start": 47,
                      "end": 58,
                      "type": "party",
                      "id": "0",
                      "text": "Newco, Inc.",
                      "confidence": 1,
                      "correctness": "UNKNOWN",
                      "customText": false,
                      "manualEntry": false,
                      "docId": 9243,
                      "docTitle": "lease1.docx"
                    }
                  ],
                  "date": [
                    {
                      "start": 66,
                      "end": 83,
                      "type": "date",
                      "id": "0",
                      "text": "September 2, 1998",
                      "confidence": 1,
                      "correctness": "UNKNOWN",
                      "customText": false,
                      "manualEntry": false,
                      "docId": 9243,
                      "docTitle": "lease1.docx"
                    }
                  ]
                },
                "modDate": "2017-08-10T03:38:57Z",
                "modBy": {
                  "username": "user",
                  "name": "Sample User",
                  "companyId": 1
                },
                "status": "COMPLETE"
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/tree/{folder path}": {
      "post": {
        "summary": "Upload a new file",
        "tags": [
          "document"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "folder path",
            "in": "path",
            "description": "location where the new folder will be created",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "The file to be uploaded",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "upload a file, return basic info",
            "examples": {
              "application/json": {
                "rows": [
                  {
                    "docId": 11037,
                    "title": "Employment Agreement - J. Patrick Doyle.docx",
                    "filename": "Employment Agreement - J. Patrick Doyle.docx",
                    "dir": "Employment Agreements",
                    "drm": "NONE",
                    "docStatus": "OCR",
                    "modByUsername": "user",
                    "modByName": "Sample User",
                    "modDate": "2017-08-10T04:16:54Z",
                    "permissionLevel": "EDIT",
                    "poorScan": false,
                    "formId": 0,
                    "isNonContract": false,
                    "groupId": 0
                  }
                ],
                "errors": [],
                "failureIds": []
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/doc/download/{doc_id}": {
      "get": {
        "summary": "Download a single file",
        "tags": [
          "document"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project id",
            "required": true,
            "type": "integer"
          },
          {
            "name": "doc_id",
            "in": "path",
            "description": "document id",
            "required": true,
            "type": "integer"
          },
          
          {
            "name": "asPdf",
            "in": "query",
            "description": "Download file as pdf, if it exists.If null or false original file will be downloaded",
            "required": false,
            "type": "string",
            "enum": [
              "true",
              "false"
            ]
          },
          {
            "name": "ocr",
            "in": "query",
            "description": "Return ocr or original version",
            "required": false,
            "type": "string",
            "enum": [
              "true",
              "false"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "No JSON output. Specify 'Send and Download' in Postman to test download the report."
          }
        }
      }
    },
    "/projects/{projectId}/doc/download": {
      "post": {
        "summary": "Download specified files in an archive (ZIP)",
        "tags": [
          "document"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "report",
            "description": "The report to create.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "docIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  },
                  "description": "List of document ids",
                  "example": [1,2,3]
                },
                "outputFileName": {
                  "type": "string",
                  "description": "Returned zip file name",
                  "example": "Sample Contracts"
                },
                "asPDF": {
                  "type": "string",
                  "description": "Use pdf version of file if it exists",
                  "enum": [
                    "true",
                    "false"
                  ]
                },
                "ocr": {
                  "type": "string",
                  "description": "User ocr or original version of file",
                  "enum": [
                    "true",
                    "false"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No JSON output. Specify 'Send and Download' in Postman to test download the report."
          }
        }
      }
    },
    "/projects/{projectId}/reports/export": {
      "post": {
        "summary": "Generate a report based on post data and send it to client for download",
        "tags": [
          "export"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "project id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "report",
            "description": "The report to create.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "pageNum": {
                  "type": "boolean"
                },
                "hyperlink": {
                  "type": "boolean"
                },
                "format": {
                  "type": "string",
                  "enum": [
                    "word",
                    "excelText",
                    "excelCheck",
                    "csv"
                  ]
                },
                "reportTitle": {
                  "type": "string"
                },
                "provisionSets": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "rows": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/rows"
                  }
                },
                "docIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "folders": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/folder"
                  }
                },
                "groupIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "timeout": {
                  "$ref": "#/definitions/timeout"
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "failureIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No JSON output. Specify \"Send and Download\" in Postman to test download the report."
          }
        }
      }
    },
    "/remote-projects/{projectId}/docs": {
      "parameters": [
        {
          "name": "projectId",
          "in": "path",
          "description": "project id in remote system",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "summary": "Get information about one or more documents",
        "tags": [
          "remote project"
        ],
        "parameters": [
          {
            "name": "summary",
            "in": "query",
            "description": "include summary of the document",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "doc-text",
            "in": "query",
            "description": "include full text of the document",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "count",
            "in": "query",
            "description": "pagination parameter: number of documents returned per page, maximum count is 100",
            "required": false,
            "type": "integer"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "pagination parameter: start pointer of the next page of documents",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "user",
            "description": "The filtering options",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "docIds": {
                  "type": "array",
                  "description": "Doc ids in remote system",
                  "items": {
                    "type": "integer"
                  }
                },
                "folder": {
                  "type": "string"
                },
                "assignees": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "array of assignee usernames",
                  "example": [
                    "sampleuser@sample.com"
                  ]
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "array of data included in the document's summary"
                },
                "date": {
                  "$ref": "#/definitions/date"
                },
                "languages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "array of language codes",
                  "enum": [
                    "en",
                    "de",
                    "pt",
                    "ru",
                    "es",
                    "sv",
                    "fr",
                    "zh",
                    "zh-tw",
                    "ja",
                    "ko",
                    "it"
                  ]
                },
                "parties": {
                  "type": "string"
                },
                "status": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "enum": [
                    "UNREVIEWED",
                    "IN_PROCESS",
                    "COMPLETE",
                    "OCR_ERROR",
                    "PDF_CONVERT_ERROR",
                    "EXTRACTING_ERROR",
                    "NON_TEXT_DOCUMENT"
                  ]
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "array of tag names"
                },
                "types": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "array of document types"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "information about a document",
            "schema": {
              "$ref": "#/definitions/get-document-results"
            },
            "examples": {
              "application/json": {
                "documents": [
                    {
                        "document": {
                            "docId": 45478,
                            "title": "Confidentiality Agreement 5.12.10 Comverse Osman.pdf",
                            "filename": "Confidentiality Agreement 5.12.10 Comverse Osman.pdf",
                            "dir": "Confidentiality Agreements",
                            "file": {
                                "path": "...pdf"
                            },
                            "drm": "NONE",
                            "docStatus": "READY",
                            "modByUsername": "admin",
                            "modByName": "Sample Admin",
                            "defaultSum": 748,
                            "modDate": "Jul 31, 2019",
                            "defaultSumStatus": "UNREVIEWED",
                            "permissionLevel": "EDIT",
                            "defaultSumFields": "termination,l_tenant_lessee,jurisdiction,confidentiality,survival,la_set_off,ea_employee,ea_employer,remedy,ea_reasonableness_rc,title,amending_agreement,l_tenant_notice,l_landlord_lessor,jury_trial,ea_employment_termiantion,choiceoflaw,equitable_relief,noncompete,affiliates,nonsolicit,party,assign,notice",
                            "poorScan": false,
                            "formId": 14,
                            "isNonContract": false,
                            "language": "en",
                            "docTypes": [
                                "Confidentiality/Non-Disclosure Agmt.",
                                "Non-Compete Agmt."
                            ],
                            "tenantId": 0,
                            "buildingId": 0,
                            "groupId": 0,
                            "orderInGroup": 0,
                            "extId": "2212"
                        }
                    }
                ],
                "next_cursor": ""
              }
            }
          }
        }
      }
    },
    "/remote-projects/{projectId}/analyze": {
      "parameters": [
        {
          "name": "projectId",
          "in": "path",
          "description": "project id in remote system",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "summary": "Analyze remote document",
        "tags": [
          "remote project"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "docIds": {
                  "type": "array",
                  "description": "Doc ids in remote system",
                  "example": [1609, 1670],
                  "items": {
                    "type": "integer"
                  }
                },
                "folder": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ids of the documents which have been sent for analysis",
            "schema": {
              "$ref": "#/definitions/docIds"
            },
            "examples": {
              "application/json": {
                "docIds": [
                    1609, 1670
                ]
              }
            }
          }
        }
      }
    },
    "/remote-projects": {
      "post": {
        "summary": "Connect a new project",
        "tags": [
          "remote project"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "access info",
            "description": "The project to connect",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "service": {
                  "type": "string",
                  "description": "service name in capital letters. Ask eBrevia for exact name of your service in this system",
                  "example": "EBREVIA"
                },
                "projectId": {
                  "type": "integer",
                  "description": "id of the matter in remote system",
                  "example": "0"
                }
                ,
                "projectName": {
                  "type": "string",
                  "description": "full name of the project in remote system",
                  "example": "Sample Project"
                }
                ,
                "remoteRootFolderId": {
                  "type": "string",
                  "example": 1
                }
                ,
                "apiBaseUrl": {
                  "type": "string",
                  "example": "https://url.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A project object",
            "examples": {
              "application/json": {
                "message": "Your matter has been connected successfully. You can send documents for analysis.",
                "matter": {
                    "id": 15,
                    "title": "eBrevia Data Room",
                    "homedir": {
                        "path": "/path/to/matter"
                    },
                    "urlKey": "urlKey",
                    "company": {
                        "id": 1,
                        "name": "eBrevia",
                        "urlKey": "ebrevia"
                    },
                    "product": "CONTRACT_MANAGER",
                    "downloadAllowed": true,
                    "ocrAllImages": false,
                    "userRoles": {},
                    "isRemote": true,
                    "apiBaseUrl": "https://url.com",
                    "remoteType": "EBREVIA",
                    "remoteRootFolderId": "1"
                }
              }
            }
          }
        }
      }
    }
  },
  "responses": {},
  "components": {
    "schemas": {
      "Document": {
        "type": "object",
        "properties": {
          "docId": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "dir": {
            "type": "string"
          },
          "drm": {
            "type": "string"
          },
          "docStatus": {
            "type": "string"
          },
          "modByUsername": {
            "type": "string"
          },
          "modByName": {
            "type": "string"
          },
          "defaultSum": {
            "type": "integer"
          },
          "modDate": {
            "type": "date"
          },
          "defaultSumStatus": {
            "type": "string"
          },
          "permissionLevel": {
            "type": "string"
          },
          "poorScan": {
            "type": "boolean"
          },
          "failedTableRecognition": {
            "type": "boolean"
          },
          "isDuplicate": {
            "type": "boolean"
          },
          "ocrDone": {
            "type": "boolean"
          },
          "startDate": {
            "type": "date"
          },
          "formId": {
            "type": "integer"
          },
          "isNonContract": {
            "type": "boolean"
          },
          "language": {
            "type": "string"
          },
          "tenantId": {
            "type": "integer"
          },
          "buildingId": {
            "type": "integer"
          },
          "groupId": {
            "type": "integer"
          },
          "orderInGroup": {
            "type": "integer"
          },
          "isMultiVersion": {
            "type": "boolean"
          },
          "score": {
            "type": "float"
          },
          "docVersions": {
            "type": "array"
          },
          "docTypes": {
            "type": "array"
          },
          "tags": {
            "type": "array"
          }

        },
        "xml": {
          "name": "Device"
        }
      }
    }
  }
}
